[{"content":"اپلیکیشن myBuddy با تمرکز بر سلامت حیوانات خانگی در دو نسخه برای دامپزشک ها و برای صاحبان حیوان خانگی ساخته شده. این اپلیکیشن به سفارش استارت آپی در Woodland Hills کالیفرنیا ساخته شده و من به همراه تیم توسعه این اپلیکیشن رو توسعه دادم.\nاین اپلیکیشن برای دامپزشک هاست و اپلیکیشن صاحبان حیوان خانگی در پستی جداگانه معرفی میشه.\n معماری: MVP, MVVM, No Architecture زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1400  جزئیات بیشتر  ","date":"2022-02-25T00:00:00Z","image":"https://aaaamirabbas.github.io/img/mybuddy_vet_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/mybuddy-vet/","title":"اپلیکیشن myBuddy (نسخه دامپزشک ها)"},{"content":"اپلیکیشن myBuddy با تمرکز بر سلامت حیوانات خانگی در دو نسخه برای دکترها و برای صاحبان حیوان خانگی ساخته شده. این اپلیکیشن به سفارش استارت آپی در Woodland Hills کالیفرنیا ساخته شده و من به همراه تیم توسعه این اپلیکیشن رو توسعه دادم.\nاین اپلیکیشن برای صاحبان حیوانات خانگی هست و اپلیکیشن دامپزشک ها در پستی جداگانه معرفی میشه.\n معماری: MVP, MVVM, No Architecture زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1400  جزئیات بیشتر  ","date":"2022-02-25T00:00:00Z","image":"https://aaaamirabbas.github.io/img/mybuddy_pet_owner_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/mybuddy-pet-owner/","title":"اپلیکیشن myBuddy (نسخه صاحبان حیوانات خانگی)"},{"content":"تیر ماه 1397 بود که برای امضاء قرار دادی با جهاد دانشگاهی شهید بهشتی به تهران صفر کردم، زمان برگشت از مترو استفاده کردم، فارق از دیدن آدم‌های خسته و خواب آلود و فضای سرد داخل واگن‌های مترو تهران، گاهی بچه‌های کار داخل مترو دیده میشن که واقعا غم انگیزه.\nدرسی که اونروز گرفتم رو هرگز فراموش نمیکنم خسته روی صندلی نشسته بودم و از پنجره بیرون رو نگاه میکردم که دختر بچه ای 8 یا ۹ ساله (همین حدودا بود) روبروم ایستاد و از من خواست تا از اون یه بسته آدامس خریداری کنم، خب دلم براش سوخت اما ته دلم راضی نبودم که ازش خرید کنم مخصوصا مواد خوراکی که در اون لحظه از کیفیتش چیزی نمیدونستم، دلمو به دریا زدم و بهش گفتم نه نیاز ندارم ممنون.\nبعد از اینکه نه گفتم دختر شروع به اصرار کردن کرد هی اصرار و هی اصرار طوری شد که همه به من نگاه میکردن و از این مورد خجالت کشیدم تا اینکه دخترک بسته آدامس رو روی مک بوک من گذاشت و گفت بیا مال خودت نمیخامش و رفت.\nهمینطور که من به دخترک نگاه میکردم میدیدم که به افراد دیگه هم این پیشنهاد رو میده اما با این تفاوت که به اونها اصرار نمیکنه و بعد از نه شنیدن منصرف میشه، با خودم فکر میکردم چه چیز باعث شد اون رفتاری متفاوت با من داشته باشه ؟ اما چیزی به ذهنم نمیرسید.\nخب داشتم به مقصد میرسیدم و دخترک همچنان به کارش ادامه میداد و کاملا مراقب من بود که بسته آدامس رو برندارم و برم با اینکه بسته رو به من بخشید ولی کاملا مراقب من بود و این رو حس میکردم، صداش کردم و 5000 تومان پول بهش دادم و ازش خواستم تا باقی پول رو به من پس بده، در این بین دخترک کاملا فهمیده بود که به مقصد نزدیک شدم.\nنکته جالب اینجا بود که بعد از اینکه پول رو دادم به جای پس دادن باقی پول به من 2 بسته دیگه آدامس داد، من همینطور که شوکه شده بودم به دخترک نگاه کردم و گفتم من باقی پولم رو میخام و اون به من نگاه کرد و بدون کلمه ای حرف زدن رفت.\nهمون لحظه به یاد فروشنده‌هایی افتادم که به جای پس دادن باقی پول آدامس یا چسپ زخم به من پس میدادن البته گاهی هم شکلات :) جدیدا هم که مد شده پول خرد وجود نداره مردم به هم میبخشن.\nبعدها که فکر میکردم متوجه شدم دلیل رفتار دخترک با من نسبت به بقیه این بود که من تردید در خریدم رو به اون نشون داده بودم در صورتی که بقیه با قاطعیت نه گفتن رو میدونستن البته شاید دلیل تردید من این بود که تجربه در این زمینه نداشتم و دیگران داشتن :) به هر حال دخترک پارامتر مورد نیاز خودش رو گرفت و الگوریتم خودش رو پیاده‌سازی کرد.\nاما تجربه ای که به من داد ارزشش خیلی بیشتر از هزینه ای بود که روی دستم گذاشت : شما میتونی محصولی رو به مشتری بفروشی که نیاز نداره (اونهم نه یکی بلکه سه تا یا بیشتر) فقط کافیه راهش رو بدونی و کمی باهوش باشی.\n","date":"2022-02-24T00:00:00Z","image":"https://files.virgool.io/upload/users/35306/posts/foemkvicahiv/pagpoe78fbih.jpeg","permalink":"https://aaaamirabbas.github.io/fa/articles/a_lesson_from_an_8_year_old_girl/","title":"درسی که از دختر بچه ای ۸ ساله آموختم"},{"content":"ضد ویروس بی ضد ویروس : اگر از windowsOS استفاده میکنید حتما حالت realtime ضد ویروس رو حتما غیر فعال کنید (البته در هنگام برنامه نویسی) در واقع این اصلی ترین مشکل کندی gradle در windowsOS هست.\nویندوز رو فراموش کنید {لطفا} : از gnuLinuxOS یا macOS استفاده کنید، به دلیل وجود ext4 در linux و memory managment kernel و عدم وجود نرم افزارهای مدیریت فرکانس cpu برای بهینه‌سازی باتری، gradle در gnuLinuxOS سریعتره، در مورد macOS هم این موضوع صدق میکنه + وجود سخت‌افزار قوی که حرفی برای گفتن نمیزاره.\nهمه چیز در یک پارتیشن : سعی کنید همه فایل‌ها از جمله sdk و پروژه و خود android studio رو همه در پارتیشنی ذخیره کنید که os در اون قرار داره (مخصوصاااا ویندوز), پراکندگی فایل‌ها باعث میشه در زمان build گرفتن سیستم شما هزینه زمانی انتقال این فایل‌ها رو به جون بخره.\nتنظیمات gradle.properties خیلی مهمن : هر پروژه ای که در gradle ایجاد میکنید فایلی با نام gradle.properties داره پس به محتوی این فایل تنظیمات زیر رو اضافه کنید، (اگر تنظیمات از قبل وجود داشت جایگزین کنید).\norg.gradle.jvmargs=-Xmx2g org.gradle.parallel=true org.gradle.caching=true org.gradle.configureondemand=true org.gradle.daemon=true نکته : در مورد تنظیمات بالا باید توضیح بدم که مهم ترینشون org.gradle.caching هست و باعث میشه اگر فایل‌های شما پراکنده هستن در پارتیشن‌های مختلف با استفاده از کش این مشکل رو رفع کنه و org.gradle.parallel پروژه‌هایی که چند ماژول دارن رو به صورت موازی build میکنه و \u0026hellip;\nنکته : پیشنهاد میکنم داکیومنت‌های gradle رو نگاهی بندازین \nاز چک کردن‌های آنلاین جلوگیری کنید :) طبق عکس عمل کنید.\nنکته : اگر نیاز به دانلود dependency های جدید داشتید باید offline work رو غیر فعال کنید و بعد از اتمام sync دوباره offline work رو فعال کنید.\nترفندها و راهکارهای خیلی زیادی وجود داره که من خودم همه رو اعمال میکنم ولی خب مهم ترین‌ها همینا بودن و بقیه تاثیر زیادی ندارن، پس مقاله رو طولانی نمیکنم :)\n","date":"2022-02-23T00:00:00Z","image":"https://files.virgool.io/upload/users/35306/posts/dpmxkmikqsqb/cy67dnnazhj5.png","permalink":"https://aaaamirabbas.github.io/fa/articles/optimize_for_faster_gradle/","title":"بهینه سازی سرعت gradle"},{"content":"این اپلیکیشن همچنین از محصول شرکت friendsurance استرالیا ایده گرفته و به زیر مجموعه گیری در ازای تخفیف در خدمات بیمه ای و حق بیمه بهره میبره, این ایده و اپلیکیشن در مسابقات برنامه نویسی دانشگاه شریف رتبه ۷ رو کسب کرد.\n معماری: MVVM زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  اطلاعات و جزئیات بیشتر در More  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/bimeh_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/insurance/","title":"اپلیکیشن بیمه همراه"},{"content":"چک این کنترل یا تیکت اپلیکیشنی برای مدیریت مسابقات، کنسرت ها، و رویداد هایی هست که نیاز به ورود و خروج اعضا دارند و کار این اپلیکیشن چک کردن اجازه ورود و خروج اعضا یا مهمان هاست.\n معماری: MVVM زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/ticket_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/ticket/","title":"اپلیکیشن تیکت"},{"content":"(شرکتی که من توسعه دهنده ارشد اندروید در اون هستم) که برای استریم فیلم و سریال طراحی شده, ایده این اپلیکیشن مشابه نت فیلیکس و فیلیمو هست.\n معماری: Clean Architecture زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/moodic_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/moodic/","title":"اپلیکیشن مودیک"},{"content":"در این اپلیکیشن اقامتگاه هایی موقتی نظیر (آپارتمان، سوئیت، ویلا، باغ خانه) توسط میزبان ها اجاره داده میشه و توسط مسافران اجاره گرفته میشه.\n معماری: MVP زبان برنامه نویسی: Java, Kotlin سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/mizbanyab_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/mizbanyab/","title":"اپلیکیشن میزبان یاب"},{"content":"این بازی به سفارش مشتری ساخته شده و هنوز هم در حال توسعه و تغییرات هست.\n معماری: MVVM زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/barandeh_sho_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/barandehsho/","title":"بازی معمایی برنده شو"},{"content":"این بازی تا ۱۰۰ هزار کاربر و بیش از ۱۰ هزار نظر داره که البته در طی سالها تعداد کاربرانش در حال کاهشه\n معماری: First Android Arch زبان برنامه نویسی: Java سیستم عامل: Android سال تولید: 1393  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/challenge_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/challenge/","title":"بازی معمایی چالش"},{"content":" معماری: MVVM زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/behzi_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/behzi/","title":"فروشگاه اینترنتی بهزی"},{"content":"این اپلیکیشن برای دانشجویان و دانش آموزان طراحی شده اما شما میتونید در هر مکانی که نیاز به جزوه برداری صوتی دارین از این اپلیکیشن استفاده کنید.\n معماری: MVP زبان برنامه نویسی: Kotlin, Java سیستم عامل: Android سال تولید: 1398  جزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/student_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/unit/","title":"واحد تیکت"},{"content":"سلام, در این مقاله میخام دیتابیس اندروید Reactor رو معرفی کنم.\nچند سال پیش زمانی که تازه وارد دنیای برنامه نویسی اندروید شده بودم یه بازی ساختم که اون زمان اسمش هوش سیاه بود (بازی شبیه به آفتابه) که البته سه چهار بار صفحه اول کافه بازار قرار گرفت و متاسفانه توسط کافه بازار حذف شد (به دلیل استفاده از نام آفتابه در عنوان بازی :) که البته بعد ها یه بازی دیگه ساختم که ادامه دهنده راهش بود به اسم چالش.\nیادم میاد اون زمان ها مردم بازی دانلود میکردن و با Lucky Patcher و اپلکیشن های دیگه امتیازات رو هک میکردن و در واقع چند متغیر بود که خیلی راحت مقادیرشون در زمان اجرا قابل واکشی بودن, بازی هوش سیاه هم از این مشکل مستثنی نبود و همون روز های اول شاهد این بودم که افرادی اقدام به تغییر امتیازات خودشون میکردن که البته اون زمان این مشکل رو رفع کردم با Encrypt کردن داده های ذخیره شده که البته خیلی کد نویسی داشت و مشکلات و …\nاما امروز که یکم حرفه ای تر شدم میدونم برای هر اپلیکیشن و هر بازی که میسازم این اصل مهم رو باید رعایت کنم که داده هایی که نیاز به امن نگه داشتن دارن باید Encrypt بشن.\nبعد ها ایده ساخت یه کتابخونه شخصی سازی شده و بهینه Key-Value به ذهنم رسید که خیلی از مشکلات SharedPreferences رو رفع کنه که البته کتابخانه های زیادی وجود دارن ولی من چیز متفاوت تری میخاستم و خب اینکارو کردم و رکتور متولد شد.\nحالا رکتور چه قابلیت هایی داره ؟\n خیلی سبک و کم حجم هست, تغریبا ۱۷ کیلوبایته ذخیره و بازیابی متقارن (Symmetric) داره که از داده های شما محافظت میکنه و کلید Encrypt کردن داده ها در هر اپلیکیشن و هر Device متفاوته که باعث حفاظت بیشتر میشه (البته نه قطعی ولی کارا, قطعیتی در دنیای 0 و 1 وجود نداره) شما هر داده ای رو میتونی ذخیره سازی کنی بر خلاف SharedPreferences داده ها به صورت تفکیک شده بر اساس تایپ ذخیره میشن که باعث کم شدن سرباز حافظه میشه پرفرمنس خوبی داره که در هر نسخه در حال بهبود بیشتره  و البته قابلیت های دیگه ای که قراره در نسخه دوم اضافه بشه که همشو میتونید در مخزن گیتهاب پروژه ببینید.\nخیلی خب حالا بیایین یه مقایسه کوچیک انجام بدیم (مقایسه صرفا در استفاده نه زیرساخت)\nتغریف SharedPreferences\nval sharedPref = activity?.getSharedPreferences( getString(R.string.preference_file_key),Context.MODE_PRIVATE) تعریف Reactor\nval reactor = Reactor(context) ذخیره و بازیابی چند متغیر در SharedPreferences\nval editor = sharedPref.edit(); editor.putBoolean(\u0026#34;key_name\u0026#34;, true); editor.putString(\u0026#34;key_name\u0026#34;, \u0026#34;string value”); editor.commit(); val name = sharedPref.getString(\u0026#34;key_name\u0026#34;, null); val isName = sharedPref.getBoolean(\u0026#34;key_name\u0026#34;, null); ذخیره چند و بازیابی در Reactor\nreactor.put(\u0026#34;key_name\u0026#34;, “your string\u0026#34;) reactor.put(\u0026#34;key_name\u0026#34;, 1000) val name = reactor.get(\u0026#34;key_name\u0026#34;, \u0026#34;\u0026#34;) val isDay = reactor.get(\u0026#34;key_name\u0026#34;, 0) ذخیره و بازیابی یک کلاس در SharedPreferences\n//ops :) ذخیره و بازیابی یک کلاس در Reactor\nreactor.put(\u0026#34;key_name\u0026#34;, YourClass()) val yourClass = reactor.get(\u0026#34;key_name\u0026#34;, YourClass()) البته قابلیت های Reactor به این مثال ها ختم نمیشه و برای دیدن داکیومنت کامل تر به مخزن گیتهاب پروژه مراجعه کنید.\nجزئیات بیشتر  ","date":"2022-02-22T00:00:00Z","image":"https://aaaamirabbas.github.io/img/reactor_screenshot.png","permalink":"https://aaaamirabbas.github.io/fa/projects/reactor/","title":"کتابخانه رکتور"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://aaaamirabbas.github.io/fa/projects/nahad_app/","title":""},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://aaaamirabbas.github.io/fa/projects/nahad_chat/","title":""}]